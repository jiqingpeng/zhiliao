<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         id="WebApp_ID" version="3.1">
    <display-name>aries</display-name>
    <!-- 欢迎页面 -->
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
    <error-page>
        <error-code>404</error-code>
        <location>/page/index/404.html</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/page/index/500.html</location>
    </error-page>
    <!-- 参数 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:config/spring.xml;classpath:config/log4jAOP.xml;classpath:config/spring-mybatis.xml;classpath:config/spring-redis.xml;
        </param-value>
    </context-param>
    <!-- Spring Session和Redis解决分布式Session跨域共享 -->
    <filter>
        <filter-name>springSessionRepositoryFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <!--<async-supported>true</async-supported>-->
    </filter>
    <filter-mapping>
        <filter-name>springSessionRepositoryFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 过滤器 -->
    <filter>
        <description>字符集过滤器</description>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <!--<async-supported>true</async-supported>-->
        <init-param>
            <description>字符集编码</description>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- url过滤器 -->
    <filter>
        <filter-name>SysFilter</filter-name>
        <filter-class>com.sjxd.gconfs.mng.filter.SysFilter</filter-class>
        <!--<async-supported>true</async-supported>-->
    </filter>
    <filter-mapping>
        <filter-name>SysFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 二级域名过滤器 -->
    <filter>
        <filter-name>SecondDomainFilter</filter-name>
        <filter-class>com.sjxd.gconfs.mng.filter.SecondDomainFilter</filter-class>
        <!--<async-supported>true</async-supported>-->
    </filter>
    <filter-mapping>
        <filter-name>SecondDomainFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--由Spring载入的Log4j配置文件位置 -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:config/log4j.properties</param-value>
    </context-param>
    <!--Spring默认刷新Log4j配置文件的间隔,单位为millisecond -->
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>
    <!-- Log4jConfigListener会去log4j.propeties 读取配置文件;开一条watchdog线程每60秒扫描一下配置文件的变化 -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <!-- session监听 -->
    <listener>
        <listener-class>com.sjxd.gconfs.mng.listener.SessionListener</listener-class>
    </listener>
    <!-- session过期 -->
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>
    <!-- 监听器 -->
    <listener>
        <description>spring监听器</description>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- Spring 刷新Introspector防止内存泄露 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    <!-- Servlet -->
    <servlet>
        <description>spring mvc servlet</description>
        <servlet-name>springMvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <description>spring mvc 配置文件</description>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:config/spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <!--<async-supported>true</async-supported>-->
    </servlet>
    <servlet-mapping>
        <servlet-name>springMvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!-- 静态资源 -->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <!-- 图片 -->
        <url-pattern>*.ico</url-pattern>
        <url-pattern>*.jpg</url-pattern>
        <url-pattern>*.jpeg</url-pattern>
        <url-pattern>*.image</url-pattern>
        <url-pattern>*.png</url-pattern>
        <url-pattern>*.gif</url-pattern>
        <!-- 样式 -->
        <url-pattern>*.css</url-pattern>
        <url-pattern>*.map</url-pattern>
        <url-pattern>*.woff</url-pattern>
        <url-pattern>*.woff2</url-pattern>
        <url-pattern>*.ttf</url-pattern>
        <!-- js相关 -->
        <url-pattern>*.js</url-pattern>
        <url-pattern>*.json</url-pattern>
        <url-pattern>*.swf</url-pattern>
        <url-pattern>*.txt</url-pattern>
        <!-- 页面 -->
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
</web-app>