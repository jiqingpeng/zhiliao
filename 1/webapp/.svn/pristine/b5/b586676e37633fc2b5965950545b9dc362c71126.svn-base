/***********************
    一些公共的方法 
***********************/
/**
 *根路径
 */
var strFullPath = window.document.location.href;
var strPath = window.document.location.pathname;
var pos = strFullPath.indexOf(strPath);
var prePath = strFullPath.substring(0, pos);
var postPath = strPath.substring(0, strPath.substr(1).indexOf('/') + 1);
// var basePath = prePath + postPath + '/';
var basePath = 'http://192.168.1.112:8080/';

/**
 * 自定义AJAX方法
 * 参数为基础参数(url、type、datatype、data、success方法、error方法)
 * 以上参数默认值为：url(必传参数),post,json,'',return,return.
 * 如需要其他参数，请商议后添加
 */
(function($) {
	$.myAjax = function(ajaxData) {
		/* **自动登录-start** */
		
		// 判断是否登录过
		if(!sessionStorage.getItem('token')){ // 登陆过，自动登录
			var name = utilForJs.getUserLoginName();
				pwd = utilForJs.getUserLoginPwd();
			if(name && pwd){
				$.ajax({
					url: basePath + 'user/login/check.do',
					data: {"mobile": name,"pwd":pwd},
					dataType: 'json',
					type: 'post',
					async: false,
					success: function(result){
						if(result.flag){
							sessionStorage.setItem('token',result.data);
						} else {
							myConfirm(result.flag);
						}
					},
					error: function(result){
						myConfirm(result.msg);
					}
				})
			} else { // 用户未登录过
				setTimeout(function(){
					window.location.href = '../index/login.html';
				},10);
			}
		} 
		/* **自动登录-end** */
		var url = ajaxData.url,
			type = (ajaxData.type == null || ajaxData.type == "" || typeof(ajaxData.type) == "undefined") ? "post" : ajaxData.type,
			dataType = (ajaxData.dataType == null || ajaxData.dataType == "" || typeof(ajaxData.dataType) == "undefined") ? "json" : ajaxData.dataType,
			data = (ajaxData.data == null || ajaxData.data == "" || typeof(ajaxData.data) == "undefined") ? '' : ajaxData.data,
			async = (ajaxData.async == null || ajaxData.async == "" || typeof(ajaxData.async) == "undefined") ? true : ajaxData.async,
			successfn = (ajaxData.success == null || ajaxData.success == "" || typeof(ajaxData.success) == "undefined") ? function() {} : ajaxData.success,
			errorfn = (ajaxData.error == null || ajaxData.error == "" || typeof(ajaxData.error) == "undefined") ? function() {} : ajaxData.error;
		url = getToken(url);
		$.ajax({
			url: url,
			data: data,
			type: type,
			dataType: dataType,
			async: async,
			success: function(result) {
				successfn(result);
			},
			error: function(result) {
				errorfn(result);
			}
		});
	}
})(Zepto);
/**
* 拼接token
*/
var tokenM = 0; // 记录请求token的次数
function getToken(url){
	if(!sessionStorage.getItem('token')){
		if(tokenM < 5){
			tokenM++;
			setTimeout(getToken(),1000);
		} else {
			tokenM = 0;
			myConfirm('请求超时，请刷新！',function(){
				location.reload();
			});
			return false;
		}
	} else {
		if(url.substring(url.length-3,url.length) == '.do'){
			return url + '?token='+sessionStorage.getItem('token')+'&tokenType=1';
		} else {
			return url + '&token='+sessionStorage.getItem('token')+'&tokenType=1';
		}
	}
}
/**
 *弹出框复选样式(必须用myConfirm的样式)
 * message:  提示信息
 * YES: 点击确定执行的方法（不传，默认移除弹框）
 * NO: 点击取消执行的方法（不传，默认移除弹框）
 */
function myConfirm(message, YES, NO) {
	$("body").prepend('<div id="masking"></div><div class="alert_box"><div class="abox_mess"></div><div class="abox_foot"><button class="yes">确&nbsp定</button><button class="no">取&nbsp消</button></div></div>');
	$("#masking").css({
		"position": "fixed",
		"width": "100%",
		"height": "100%",
		"background": "#000",
		"z-index": "3001",
		"filter":"alpha(Opacity=40)",
		"-moz-opacity":"0.4",
		"opacity": "0.4"
	});
	$(".alert_box").css({
		"position": "fixed",
		'left': '12%',
		'top': '42%',
		"border": "1px solid #ddd",
		"border-radius": "4px 4px",
		"width": "76%",
		"min-height": "80px",
		"background": "#fff",
		"z-index": "3002",
	});
	$(".abox_mess").css({
		"margin": "10px 0px",
		"height": "30px",
		"line-height": "30px",
		"padding-left": "15px"
	});
	$(".abox_foot").css({
		"border-top": "1px solid #ddd",
		"height": "34px",
		"width": "100%",
		"line-height": "34px",
		"text-align": "right"
	});
	$(".abox_foot button").css({
		"width": "15%",
		"margin-right": "10px",
		"color": "#fc742a",
		"border": "none",
		"background": "none"
	});
	$('.alert_box').css('display', 'block')
	$('.alert_box .abox_mess').html(message);
	// 点击确定
	if (!!YES) {
		$('.yes').on('click', function() {
			YES();
			$("#masking").remove();
			$(this).parent().parent().remove();
		});
	} else {
		$('.yes').on('click', function() {
			$("#masking").remove();
			$(this).parent().parent().remove();
			return true;
		});
	}
	// 点击取消
	if (!!NO) {
		$('.no').on('click', function() {
			NO();
			$("#masking").remove();
			$(this).parent().parent().remove();
		});
	} else {
		$('.no').on('click', function() {
			$("#masking").remove();
			$(this).parent().parent().remove();
			return false;
		});
	}
}
/**
 *弹出框保存样式(直接调js)
 */
function myAlert(data) {
	$("body").prepend('<div id="masking"></div><div id="myalert"><div id="alertcon"></div></div>');
	$("#masking").css({
		"position": "fixed",
		"width": "100%",
		"height": "100%",
		"background": "#000",
		"z-index": "3001",
		"filter":"alpha(Opacity=40)",
		"-moz-opacity":"0.4",
		"opacity": "0.4"
	});
	$("#myalert").css({
		"position": "fixed",
		'left': '12%',
		'top': '42%',
		"border": "1px solid #ddd",
		"width": "76%",
		"min-height": "80px",
		"background": "#fff",
		"border-radius": "6px 6px",
		"z-index": "3002",
	});
	$("#alertcon").css({
		"min-height": "30px",
		"color": "#333",
		"font-size": "16px",
		"line-height": "30px",
		"padding": "26px 34px",
		"text-align": "center"
	});
	$("#alertcon").html(data);
	// 延时3s消失
	setTimeout(function(){
		$("#myalert, #masking").remove();
	},3000);
}
/**
 * 获取地址栏中传入参数的值（如：获取id值 -> Request(id)）
 * 如果找不到该参数对应的值，返回 null
 */
function Request(name) {
	if (new RegExp("(^|&)" + name + "=([^&]*)").exec(window.location.search.substr(1))) {
		return RegExp.$2;
	}
	return null;
}
/**
 * JSON对象编码
 */
function setUrlJson(jsonD) {
	return encodeURI(JSON.stringify(jsonD));
}
/**
 * 获取地址栏中的json对象（如：获取obj值 -> getUrlJson(obj)）
 * 如果找不到该参数对应的值，返回 null
 */
function getUrlJson(name) {
	if (Request(name)) {
		return JSON.parse(decodeURI(Request(name)));
	}
	return null;
}